# Нужно реальзовать логику для PostController
# Добавить CommentsController самостоятельно
# В отчете по заданию расписать, понимание работы класса Router, причины по которым 
# используется extend для модуля Resource
# В случае неправильного ввода(команды), ваша программа должна выдать соответсвующее сообщение 
# об ошибке, которое говорит клиенту,
# как ее исправить.

require "./router"

router = Router.new
router.init

# Для CommentsController
# -GET index - возвращает все комментарии из памяти и их индекс в массиве
# -GET show - запрашивает идентификатор комментария и показывает комментарий по переданному идентификатору
# -POST create - запрашивает текст комментария, добавляет его в массив комментариев и 
#  возвращает в ответ идентификатор комментария и сам комментарий
# -PUT update - запрашивает идентификатор комментария,потом новый текст комментария и изменяет его. 
# В результате выводит измененный комментарий.
# -DELETE destroy -запрашивает идентификатор комментария, затем удаляет его из массива комментариев.

# Отчет
# Класс Router содержит констурктор и два метода init и resources. В методе init с помощью 
# цикла происходит выбор между PostsController,CommentsController и выходом из программы. 
# Метод resources после выбора перенаправляет на конкретный метод выбранного ранее контроллера.
# С помощью extend для модуля Resource добавляем метод модуля к контроллерам.
